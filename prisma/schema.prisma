// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rol {
  admin
  user
}

enum TipoProducto {
  feminizada
  automatica
  regular
  indoor
  maceta
  sustrato
  insecticida
}

enum EstadoOrder {
  pendiente
  pagada
  rechazada
}

enum EstadoEnvio {
  entregado
  enviado
  enviando
}

model categorias {
  id             String           @id @default(uuid())
  nombre         String           @unique
  productos      productos[]
  sub_cagegorias sub_cagegorias[]
}

model sub_cagegorias {
  id     String @id @default(uuid())
  nombre String

  categoria     categorias  @relation(fields: [categorias_id], references: [id])
  categorias_id String
  productos     productos[]
}

model productos {
  id            String  @id @default(uuid())
  titulo        String
  slug          String  @unique
  descripcion   String
  notas         String
  cantidad      Int
  precio        Float   @default(0)
  descuento     Int?
  aroma         String?
  sabor         String?
  contenido     Int? 
  cosecha_aprox String?
  // tipo_producto TipoProducto

  //* Relaciones
  categoria     categorias @relation(fields: [categorias_id], references: [id])
  categorias_id String

  subCategoria      sub_cagegorias @relation(fields: [sub_categorias_id], references: [id])
  sub_categorias_id String

  canabinoides      canabinoides[]
  producto_imagenes producto_imagenes[]
  order_detalle     order_detalle[]

  // @@index([tipo_producto])
}

model canabinoides {
  id         String @id @default(uuid())
  titulo     String
  porcentaje Float  @default(0)

  producto     productos @relation(fields: [productos_id], references: [id])
  productos_id String
}

// model terpenos {

// }

model producto_imagenes {
  id  String @id @default(uuid())
  url String

  producto     productos @relation(fields: [productos_id], references: [id])
  productos_id String
}

model usuarios {
  id               String   @id @default(uuid())
  email            String   @unique
  email_confirmado Boolean  @default(false)
  nombre           String
  apellido         String
  clave            String
  rol              Rol      @default(user)
  image            String?
  tipo_login       String   @default("credentials")
  pais             String   @default("Colombia")
  direccion        String?
  direccion2       String?
  fecha_crea       DateTime @default(now())
  fecha_actualiza  DateTime @default(now())

  Order        order[]
  municipios   municipios? @relation(fields: [municipiosId], references: [id])
  municipiosId Int?
}

model order {
  id             String      @id @default(uuid())
  sub_total      Float
  tax            Float?      @default(0)
  // tipo_envio     Boolean?
  estado_order   EstadoOrder @default(pendiente)
  estado_envio   EstadoEnvio @default(enviando)
  costo_envio    Float?      @default(0)
  total          Float
  items_in_order Int
  fecha_pago     String?

  fecha_crea      DateTime @default(now())
  fecha_actualiza DateTime @updatedAt

  // Relaciones
  usuario    usuarios? @relation(fields: [usuario_id], references: [id])
  usuario_id String?

  OrderDetalle order_detalle[]
  OrderAdress  order_adress?

  transaction_id String?
  ref_epayco     String?
}

model order_detalle {
  id       String @id @default(uuid())
  cantidad Int
  precio   Float
  // color    String

  // Relaciones
  order    order  @relation(fields: [order_id], references: [id])
  order_id String

  producto    productos @relation(fields: [producto_id], references: [id])
  producto_id String
}

model order_adress {
  id              String  @id @default(uuid())
  correo          String
  nombres         String
  apellidos       String
  tipoDocumento   String
  numeroDocumento String
  departamento    String
  municipio       String
  direccion       String
  direccion2      String?
  // codigoPostal    String
  // ciudad          String
  // pais            String
  telefono        String

  // Relaciones
  order    order  @relation(fields: [order_id], references: [id])
  order_id String @unique
}

model departamentos {
  id        Int          @id
  nombre    String
  Municipio municipios[]
}

model municipios {
  id     Int    @id
  nombre String

  // Relaciones
  departamento    departamentos @relation(fields: [departamento_id], references: [id])
  departamento_id Int
  User            usuarios[]
}
